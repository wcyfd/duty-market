/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aim.duty.duty_market.ui;

import java.awt.EventQueue;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import java.util.Vector;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import com.aim.duty.duty_base.cache.ConstantCache;
import com.aim.duty.duty_base.entity.base.AbstractProp;
import com.aim.duty.duty_base.entity.bo.Brick;
import com.aim.duty.duty_base.entity.bo.Commodity;
import com.aim.duty.duty_base.entity.bo.Magic;
import com.aim.duty.duty_base.service.prop.PropConstant;
import com.aim.duty.duty_base.util.Util;
import com.aim.duty.duty_market.cache.MarketCache;
import com.aim.duty.duty_market.module.market.service.MarketService;
import com.aim.game_base.net.SpringContext;
import com.aim.game_base.net.Utils;
import com.google.protobuf.ByteString;

/**
 *
 * @author asus
 */
public class MainFrame extends javax.swing.JFrame implements Observer {

	/**
	 * Creates new form MainFrame
	 */
	public MainFrame() {
		initCode();
		initComponents();
	}

	private void initCode() {
		// TODO Auto-generated method stub
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jTabbedPane1 = new javax.swing.JTabbedPane();
		jPanel2 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		refreshjButton = new javax.swing.JButton();
		addButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jTable1.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "编号", "商品类型", "商品名", "数量", "单价" }));
		jTable1.setEnabled(false);
		jScrollPane1.setViewportView(jTable1);

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE));

		jTabbedPane1.addTab("物品1", jPanel2);

		jTextArea1.setColumns(20);
		jTextArea1.setRows(5);
		jScrollPane2.setViewportView(jTextArea1);

		refreshjButton.setText("刷新");
		refreshjButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				refreshjButtonActionPerformed(evt);
			}
		});

		addButton.setText("add");
		addButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(jScrollPane2,
																javax.swing.GroupLayout.DEFAULT_SIZE, 291,
																Short.MAX_VALUE)
														.addGroup(
																jPanel1Layout
																		.createSequentialGroup()
																		.addGap(0, 0, Short.MAX_VALUE)
																		.addComponent(addButton)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(refreshjButton)))));
		jPanel1Layout.setVerticalGroup(jPanel1Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jTabbedPane1)
				.addGroup(
						jPanel1Layout
								.createSequentialGroup()
								.addComponent(jScrollPane2)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(refreshjButton).addComponent(addButton))));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>

	private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		Thread t = new Thread(new Runnable() {

			@Override
			public void run() {
				// TODO Auto-generated method stub
				while (true) {
					Util.threadSleep(500);
					MarketService marketService = SpringContext.getBean("marketService");
					marketService.buyCommodity(Utils.getRandomNum(1, 57), 1);
				}
			}
		});
		t.start();
	}

	private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:

		new Thread(new Runnable() {

			@Override
			public void run() {
				// TODO Auto-generated method stub
				for (int i = 0; i < 50; i++) {
					Util.threadSleep(500);

					Brick brick = new Brick();

					Magic magic = new Magic();
					magic.setDuration(29);
					magic.setMagicId(2001);
					magic.setValue(5302);
					brick.addMagic(magic);

					Magic magic2 = new Magic();
					magic2.setDuration(33);
					magic2.setMagicId(4001);
					magic2.setValue(6543);
					brick.addMagic(magic2);

					brick.setMineId(444);
					brick.setNum(50);

					MarketService marketService = SpringContext.getBean("marketService");
					marketService.saleCommodity(12, PropConstant.BRICK, brick.serialize());

				}

			}
		}).start();
		;
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainFrame().setVisible(true);
			}
		});
	}

	public static void start(final MainFrame frame) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				frame.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton addButton;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTabbedPane jTabbedPane1;
	private javax.swing.JTable jTable1;
	private javax.swing.JTextArea jTextArea1;
	private javax.swing.JButton refreshjButton;

	// End of variables declaration

	@Override
	public void update(Observable o, Object arg) {
		// TODO Auto-generated method stub
		List list = (List) arg;
		String event = (String) list.get(0);
		if (event.equals("sale")) {
			this.add(list);
		} else if (event.equals("buy")) {
			this.buy(list);
		}

	}

	private void add(List list) {
		final Commodity commodity = (Commodity) list.get(1);
		final byte propType = commodity.getSalePropType();
		final int price = commodity.getSinglePrice();
		ByteString propData = commodity.getSalePropData();

		try {
			final AbstractProp prop = (AbstractProp) ConstantCache.salePropClassMap.get(propType).newInstance();
			prop.deserialize(propData);
			EventQueue.invokeLater(new Runnable() {

				@Override
				public void run() {
					// TODO Auto-generated method stub
					DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
					model.addRow(new Object[] { commodity.getId(), propType, prop, prop.getNum(), price });

				}

			});
		} catch (InstantiationException | IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	private void buy(List list) {
		final int commodityId = (int) list.get(1);
		final int num = (int) list.get(2);
		final Commodity commodity = MarketCache.commodityMap.get(commodityId);

		EventQueue.invokeLater(new Runnable() {

			@Override
			public void run() {
				// TODO Auto-generated method stub
				DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

				for (int i = 0; i < model.getRowCount(); i++) {
					if (commodityId == (int) model.getValueAt(i, 0)) {
						if (commodity == null) {
							model.removeRow(i);
						} else {
							model.setValueAt(((int) model.getValueAt(i, 3)) - num, i, 3);
						}
						break;
					}
				}
			}
		});

	}

}
